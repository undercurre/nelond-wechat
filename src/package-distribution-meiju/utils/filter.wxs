// todo 过滤器 module 对象文件

// 判断食谱难易度
var judgeDifficulty = function (number) {
  if (number) {
    var rank = ['容易', '中等', '困难', '较难']
    var difficulty = rank[number - 1]
    return difficulty
  } else {
    return ''
  }
}
// 格式化卡路里 1234.0->1234
var deletDecimal = function (number) {
  if (number) {
    var kcal = number.toString().split('.', 1)
    return kcal
  } else {
    return ''
  }
}

// 格式化时间  2019-12-06 14:30:37 -> 2019-12-06
var formatTimer = function (str) {
  if (str) {
    var time = str.toString().split(' ', 1)
    return time
  } else {
    return ''
  }
}
/* 评论显示时间规则 str:2019-12-17 16:27:31
—— 刚刚：小于等于1min
—— x分钟前：  大于1min，小于等于60min
—— x小时前：大于1h，小于等于24h；
—— 超过24小时，显示：年月日，如2019-01-01
*/
var commentTime = function (time) {
  var now = getDate()
  time1 = Date.parse(getDate(time.replace(getRegExp('-', 'g'), '/')))
  time2 = now.getTime()
  time3 = Math.abs(time2 - time1)
  daffTime = Math.floor(time3 / (60 * 1000))
  if (daffTime == 0) {
    return '刚刚'
  } else if (daffTime > 0 && daffTime <= 60) {
    return daffTime + '分钟前'
  } else if (daffTime > 60 && daffTime < 60 * 24) {
    return Math.floor(daffTime / 60) + '小时前'
  } else {
    return time.split(' ')[0]
  }
}

//数量显示规则 ：1~9999显示对应数字、10000~10999显示1.0w，以此类推
var formatNumber = function (number) {
  var num = number
  if (!num) {
    return ''
  }
  if (num > 9999) {
    return (num / 10000).toFixed(1) + 'w'
    // return ((num - num % 1000) / 10000).toFixed(1) + 'w'
  } else if (num > 999999) {
    return 100 + 'w+'
  } else {
    return num
  }
}

//计算图片高度
var calcHeight = function (imgWidth, imgHeight, clientWidth) {
  var currentHeght = 165
  if (imgWidth && imgHeight) {
    currentHeght = (imgHeight / imgWidth) * ((clientWidth / 375) * 165)
  }
  return currentHeght
}

//格式化金额
var formatAmount = function (val) {
  var currentAmount = val
  if (currentAmount % 100 == 0) {
    return currentAmount / 100 + '.00'
  }
  if (currentAmount % 10 == 0) {
    return currentAmount / 100 + '0'
  }
  return currentAmount / 100
}

module.exports = {
  judgeDifficulty: judgeDifficulty,
  deletDecimal: deletDecimal,
  formatTimer: formatTimer,
  formatNumber: formatNumber,
  commentTime: commentTime,
  calcHeight: calcHeight,
  formatAmount: formatAmount,
}
